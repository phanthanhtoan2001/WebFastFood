#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VSLT_FastfoodTeam.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FastFoodNew")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTPN(CTPN instance);
    partial void UpdateCTPN(CTPN instance);
    partial void DeleteCTPN(CTPN instance);
    partial void InsertCTDDH(CTDDH instance);
    partial void UpdateCTDDH(CTDDH instance);
    partial void DeleteCTDDH(CTDDH instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    partial void InsertNCC(NCC instance);
    partial void UpdateNCC(NCC instance);
    partial void DeleteNCC(NCC instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    #endregion
		
		public MyDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FastFoodNewConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTPN> CTPNs
		{
			get
			{
				return this.GetTable<CTPN>();
			}
		}
		
		public System.Data.Linq.Table<CTDDH> CTDDHs
		{
			get
			{
				return this.GetTable<CTDDH>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
		
		public System.Data.Linq.Table<NCC> NCCs
		{
			get
			{
				return this.GetTable<NCC>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<cusorder> cusorders
		{
			get
			{
				return this.GetTable<cusorder>();
			}
		}
		
		public System.Data.Linq.Table<thongkeddh> thongkeddhs
		{
			get
			{
				return this.GetTable<thongkeddh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPN")]
	public partial class CTPN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private int _Maphieu;
		
		private System.Nullable<int> _Giamua;
		
		private System.Nullable<int> _Soluong;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
		private EntityRef<PhieuNhap> _PhieuNhap1;
		
		private EntityRef<PhieuNhap> _PhieuNhap2;
		
		private EntityRef<PhieuNhap> _PhieuNhap3;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<SanPham> _SanPham1;
		
		private EntityRef<SanPham> _SanPham2;
		
		private EntityRef<SanPham> _SanPham3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnMaphieuChanging(int value);
    partial void OnMaphieuChanged();
    partial void OnGiamuaChanging(System.Nullable<int> value);
    partial void OnGiamuaChanged();
    partial void OnSoluongChanging(System.Nullable<int> value);
    partial void OnSoluongChanged();
    #endregion
		
		public CTPN()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			this._PhieuNhap1 = default(EntityRef<PhieuNhap>);
			this._PhieuNhap2 = default(EntityRef<PhieuNhap>);
			this._PhieuNhap3 = default(EntityRef<PhieuNhap>);
			this._SanPham = default(EntityRef<SanPham>);
			this._SanPham1 = default(EntityRef<SanPham>);
			this._SanPham2 = default(EntityRef<SanPham>);
			this._SanPham3 = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if ((((this._SanPham.HasLoadedOrAssignedValue || this._SanPham1.HasLoadedOrAssignedValue) 
								|| this._SanPham2.HasLoadedOrAssignedValue) 
								|| this._SanPham3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphieu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maphieu
		{
			get
			{
				return this._Maphieu;
			}
			set
			{
				if ((this._Maphieu != value))
				{
					if ((((this._PhieuNhap.HasLoadedOrAssignedValue || this._PhieuNhap1.HasLoadedOrAssignedValue) 
								|| this._PhieuNhap2.HasLoadedOrAssignedValue) 
								|| this._PhieuNhap3.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaphieuChanging(value);
					this.SendPropertyChanging();
					this._Maphieu = value;
					this.SendPropertyChanged("Maphieu");
					this.OnMaphieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giamua", DbType="Int")]
		public System.Nullable<int> Giamua
		{
			get
			{
				return this._Giamua;
			}
			set
			{
				if ((this._Giamua != value))
				{
					this.OnGiamuaChanging(value);
					this.SendPropertyChanging();
					this._Giamua = value;
					this.SendPropertyChanged("Giamua");
					this.OnGiamuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluong", DbType="Int")]
		public System.Nullable<int> Soluong
		{
			get
			{
				return this._Soluong;
			}
			set
			{
				if ((this._Soluong != value))
				{
					this.OnSoluongChanging(value);
					this.SendPropertyChanging();
					this._Soluong = value;
					this.SendPropertyChanged("Soluong");
					this.OnSoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN", Storage="_PhieuNhap", ThisKey="Maphieu", OtherKey="Maphieu", IsForeignKey=true)]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.CTPNs.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.CTPNs.Add(this);
						this._Maphieu = value.Maphieu;
					}
					else
					{
						this._Maphieu = default(int);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN1", Storage="_PhieuNhap1", ThisKey="Maphieu", OtherKey="Maphieu", IsForeignKey=true)]
		public PhieuNhap PhieuNhap1
		{
			get
			{
				return this._PhieuNhap1.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap1.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap1.Entity = null;
						previousValue.CTPNs1.Remove(this);
					}
					this._PhieuNhap1.Entity = value;
					if ((value != null))
					{
						value.CTPNs1.Add(this);
						this._Maphieu = value.Maphieu;
					}
					else
					{
						this._Maphieu = default(int);
					}
					this.SendPropertyChanged("PhieuNhap1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN2", Storage="_PhieuNhap2", ThisKey="Maphieu", OtherKey="Maphieu", IsForeignKey=true)]
		public PhieuNhap PhieuNhap2
		{
			get
			{
				return this._PhieuNhap2.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap2.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap2.Entity = null;
						previousValue.CTPNs2.Remove(this);
					}
					this._PhieuNhap2.Entity = value;
					if ((value != null))
					{
						value.CTPNs2.Add(this);
						this._Maphieu = value.Maphieu;
					}
					else
					{
						this._Maphieu = default(int);
					}
					this.SendPropertyChanged("PhieuNhap2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN3", Storage="_PhieuNhap3", ThisKey="Maphieu", OtherKey="Maphieu", IsForeignKey=true)]
		public PhieuNhap PhieuNhap3
		{
			get
			{
				return this._PhieuNhap3.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap3.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap3.Entity = null;
						previousValue.CTPNs3.Remove(this);
					}
					this._PhieuNhap3.Entity = value;
					if ((value != null))
					{
						value.CTPNs3.Add(this);
						this._Maphieu = value.Maphieu;
					}
					else
					{
						this._Maphieu = default(int);
					}
					this.SendPropertyChanged("PhieuNhap3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTPNs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTPNs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN1", Storage="_SanPham1", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham1
		{
			get
			{
				return this._SanPham1.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham1.Entity;
				if (((previousValue != value) 
							|| (this._SanPham1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham1.Entity = null;
						previousValue.CTPNs1.Remove(this);
					}
					this._SanPham1.Entity = value;
					if ((value != null))
					{
						value.CTPNs1.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN2", Storage="_SanPham2", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham2
		{
			get
			{
				return this._SanPham2.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham2.Entity;
				if (((previousValue != value) 
							|| (this._SanPham2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham2.Entity = null;
						previousValue.CTPNs2.Remove(this);
					}
					this._SanPham2.Entity = value;
					if ((value != null))
					{
						value.CTPNs2.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN3", Storage="_SanPham3", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham3
		{
			get
			{
				return this._SanPham3.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham3.Entity;
				if (((previousValue != value) 
							|| (this._SanPham3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham3.Entity = null;
						previousValue.CTPNs3.Remove(this);
					}
					this._SanPham3.Entity = value;
					if ((value != null))
					{
						value.CTPNs3.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDDH")]
	public partial class CTDDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDDH;
		
		private int _MaSP;
		
		private System.Nullable<int> _soluong;
		
		private System.Nullable<int> _Dongia;
		
		private System.Nullable<bool> _TinhTrang;
		
		private string _YeuCauKH;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
		private EntityRef<DonDatHang> _DonDatHang1;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<SanPham> _SanPham1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDHChanging(int value);
    partial void OnMaDDHChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnsoluongChanging(System.Nullable<int> value);
    partial void OnsoluongChanged();
    partial void OnDongiaChanging(System.Nullable<int> value);
    partial void OnDongiaChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnYeuCauKHChanging(string value);
    partial void OnYeuCauKHChanged();
    #endregion
		
		public CTDDH()
		{
			this._DonDatHang = default(EntityRef<DonDatHang>);
			this._DonDatHang1 = default(EntityRef<DonDatHang>);
			this._SanPham = default(EntityRef<SanPham>);
			this._SanPham1 = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					if ((this._DonDatHang.HasLoadedOrAssignedValue || this._DonDatHang1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if ((this._SanPham.HasLoadedOrAssignedValue || this._SanPham1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Int")]
		public System.Nullable<int> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YeuCauKH", DbType="NVarChar(100)")]
		public string YeuCauKH
		{
			get
			{
				return this._YeuCauKH;
			}
			set
			{
				if ((this._YeuCauKH != value))
				{
					this.OnYeuCauKHChanging(value);
					this.SendPropertyChanging();
					this._YeuCauKH = value;
					this.SendPropertyChanged("YeuCauKH");
					this.OnYeuCauKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDDH", Storage="_DonDatHang", ThisKey="MaDDH", OtherKey="MaDDH", IsForeignKey=true)]
		public DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.CTDDHs.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.CTDDHs.Add(this);
						this._MaDDH = value.MaDDH;
					}
					else
					{
						this._MaDDH = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDDH1", Storage="_DonDatHang1", ThisKey="MaDDH", OtherKey="MaDDH", IsForeignKey=true)]
		public DonDatHang DonDatHang1
		{
			get
			{
				return this._DonDatHang1.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang1.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang1.Entity = null;
						previousValue.CTDDHs1.Remove(this);
					}
					this._DonDatHang1.Entity = value;
					if ((value != null))
					{
						value.CTDDHs1.Add(this);
						this._MaDDH = value.MaDDH;
					}
					else
					{
						this._MaDDH = default(int);
					}
					this.SendPropertyChanged("DonDatHang1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTDDH", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTDDHs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTDDHs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTDDH1", Storage="_SanPham1", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham1
		{
			get
			{
				return this._SanPham1.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham1.Entity;
				if (((previousValue != value) 
							|| (this._SanPham1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham1.Entity = null;
						previousValue.CTDDHs1.Remove(this);
					}
					this._SanPham1.Entity = value;
					if ((value != null))
					{
						value.CTDDHs1.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SanPham1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDDH;
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<bool> _Tinhtrangdonhang;
		
		private System.Nullable<System.DateTime> _Ngaygiao;
		
		private System.Nullable<int> _MaKH;
		
		private EntitySet<CTDDH> _CTDDHs;
		
		private EntitySet<CTDDH> _CTDDHs1;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<KhachHang> _KhachHang1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDHChanging(int value);
    partial void OnMaDDHChanged();
    partial void OnNgaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaydatChanged();
    partial void OnTinhtrangdonhangChanging(System.Nullable<bool> value);
    partial void OnTinhtrangdonhangChanged();
    partial void OnNgaygiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaygiaoChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    #endregion
		
		public DonDatHang()
		{
			this._CTDDHs = new EntitySet<CTDDH>(new Action<CTDDH>(this.attach_CTDDHs), new Action<CTDDH>(this.detach_CTDDHs));
			this._CTDDHs1 = new EntitySet<CTDDH>(new Action<CTDDH>(this.attach_CTDDHs1), new Action<CTDDH>(this.detach_CTDDHs1));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._KhachHang1 = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this.OnNgaydatChanging(value);
					this.SendPropertyChanging();
					this._Ngaydat = value;
					this.SendPropertyChanged("Ngaydat");
					this.OnNgaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tinhtrangdonhang", DbType="Bit")]
		public System.Nullable<bool> Tinhtrangdonhang
		{
			get
			{
				return this._Tinhtrangdonhang;
			}
			set
			{
				if ((this._Tinhtrangdonhang != value))
				{
					this.OnTinhtrangdonhangChanging(value);
					this.SendPropertyChanging();
					this._Tinhtrangdonhang = value;
					this.SendPropertyChanged("Tinhtrangdonhang");
					this.OnTinhtrangdonhangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaygiao", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaygiao
		{
			get
			{
				return this._Ngaygiao;
			}
			set
			{
				if ((this._Ngaygiao != value))
				{
					this.OnNgaygiaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaygiao = value;
					this.SendPropertyChanged("Ngaygiao");
					this.OnNgaygiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if ((this._KhachHang.HasLoadedOrAssignedValue || this._KhachHang1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDDH", Storage="_CTDDHs", ThisKey="MaDDH", OtherKey="MaDDH")]
		public EntitySet<CTDDH> CTDDHs
		{
			get
			{
				return this._CTDDHs;
			}
			set
			{
				this._CTDDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDDH1", Storage="_CTDDHs1", ThisKey="MaDDH", OtherKey="MaDDH")]
		public EntitySet<CTDDH> CTDDHs1
		{
			get
			{
				return this._CTDDHs1;
			}
			set
			{
				this._CTDDHs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang1", Storage="_KhachHang1", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang1
		{
			get
			{
				return this._KhachHang1.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang1.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang1.Entity = null;
						previousValue.DonDatHangs1.Remove(this);
					}
					this._KhachHang1.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs1.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
		
		private void attach_CTDDHs1(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang1 = this;
		}
		
		private void detach_CTDDHs1(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _TenKH;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private System.Nullable<int> _MaTK;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
		private EntitySet<DonDatHang> _DonDatHangs1;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<TaiKhoan> _TaiKhoan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaTKChanging(System.Nullable<int> value);
    partial void OnMaTKChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			this._DonDatHangs1 = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs1), new Action<DonDatHang>(this.detach_DonDatHangs1));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._TaiKhoan1 = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", DbType="Int")]
		public System.Nullable<int> MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					if ((this._TaiKhoan.HasLoadedOrAssignedValue || this._TaiKhoan1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_DonDatHangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang1", Storage="_DonDatHangs1", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DonDatHang> DonDatHangs1
		{
			get
			{
				return this._DonDatHangs1;
			}
			set
			{
				this._DonDatHangs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang", Storage="_TaiKhoan", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang1", Storage="_TaiKhoan1", ThisKey="MaTK", OtherKey="MaTK", IsForeignKey=true)]
		public TaiKhoan TaiKhoan1
		{
			get
			{
				return this._TaiKhoan1.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan1.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan1.Entity = null;
						previousValue.KhachHangs1.Remove(this);
					}
					this._TaiKhoan1.Entity = value;
					if ((value != null))
					{
						value.KhachHangs1.Add(this);
						this._MaTK = value.MaTK;
					}
					else
					{
						this._MaTK = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DonDatHangs1(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang1 = this;
		}
		
		private void detach_DonDatHangs1(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSP;
		
		private string _TenLoai;
		
		private string _Icon;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntitySet<SanPham> _SanPhams1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(int value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    #endregion
		
		public LoaiSP()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._SanPhams1 = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams1), new Action<SanPham>(this.detach_SanPhams1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(25)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(60)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_SanPhams", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham1", Storage="_SanPhams1", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SanPham> SanPhams1
		{
			get
			{
				return this._SanPhams1;
			}
			set
			{
				this._SanPhams1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = null;
		}
		
		private void attach_SanPhams1(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP1 = this;
		}
		
		private void detach_SanPhams1(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCC")]
	public partial class NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _TenNCC;
		
		private string _Diachi;
		
		private string _Email;
		
		private string _SDT;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntitySet<SanPham> _SanPhams1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NCC()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._SanPhams1 = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams1), new Action<SanPham>(this.detach_SanPhams1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(25)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_SanPham", Storage="_SanPhams", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_SanPham1", Storage="_SanPhams1", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<SanPham> SanPhams1
		{
			get
			{
				return this._SanPhams1;
			}
			set
			{
				this._SanPhams1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NCC = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NCC = null;
		}
		
		private void attach_SanPhams1(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NCC1 = this;
		}
		
		private void detach_SanPhams1(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.NCC1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maphieu;
		
		private System.Nullable<System.DateTime> _Ngaynhap;
		
		private EntitySet<CTPN> _CTPNs;
		
		private EntitySet<CTPN> _CTPNs1;
		
		private EntitySet<CTPN> _CTPNs2;
		
		private EntitySet<CTPN> _CTPNs3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaphieuChanging(int value);
    partial void OnMaphieuChanged();
    partial void OnNgaynhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaynhapChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._CTPNs = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs), new Action<CTPN>(this.detach_CTPNs));
			this._CTPNs1 = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs1), new Action<CTPN>(this.detach_CTPNs1));
			this._CTPNs2 = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs2), new Action<CTPN>(this.detach_CTPNs2));
			this._CTPNs3 = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs3), new Action<CTPN>(this.detach_CTPNs3));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Maphieu
		{
			get
			{
				return this._Maphieu;
			}
			set
			{
				if ((this._Maphieu != value))
				{
					this.OnMaphieuChanging(value);
					this.SendPropertyChanging();
					this._Maphieu = value;
					this.SendPropertyChanged("Maphieu");
					this.OnMaphieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaynhap", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaynhap
		{
			get
			{
				return this._Ngaynhap;
			}
			set
			{
				if ((this._Ngaynhap != value))
				{
					this.OnNgaynhapChanging(value);
					this.SendPropertyChanging();
					this._Ngaynhap = value;
					this.SendPropertyChanged("Ngaynhap");
					this.OnNgaynhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN", Storage="_CTPNs", ThisKey="Maphieu", OtherKey="Maphieu")]
		public EntitySet<CTPN> CTPNs
		{
			get
			{
				return this._CTPNs;
			}
			set
			{
				this._CTPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN1", Storage="_CTPNs1", ThisKey="Maphieu", OtherKey="Maphieu")]
		public EntitySet<CTPN> CTPNs1
		{
			get
			{
				return this._CTPNs1;
			}
			set
			{
				this._CTPNs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN2", Storage="_CTPNs2", ThisKey="Maphieu", OtherKey="Maphieu")]
		public EntitySet<CTPN> CTPNs2
		{
			get
			{
				return this._CTPNs2;
			}
			set
			{
				this._CTPNs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN3", Storage="_CTPNs3", ThisKey="Maphieu", OtherKey="Maphieu")]
		public EntitySet<CTPN> CTPNs3
		{
			get
			{
				return this._CTPNs3;
			}
			set
			{
				this._CTPNs3.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
		
		private void attach_CTPNs1(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap1 = this;
		}
		
		private void detach_CTPNs1(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap1 = null;
		}
		
		private void attach_CTPNs2(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap2 = this;
		}
		
		private void detach_CTPNs2(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap2 = null;
		}
		
		private void attach_CTPNs3(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap3 = this;
		}
		
		private void detach_CTPNs3(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap3 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTK;
		
		private string _TenTK;
		
		private string _MatKhau;
		
		private string _Email;
		
		private System.Nullable<bool> _LoaiTK;
		
		private EntitySet<KhachHang> _KhachHangs;
		
		private EntitySet<KhachHang> _KhachHangs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoaiTKChanging(System.Nullable<bool> value);
    partial void OnLoaiTKChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			this._KhachHangs1 = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs1), new Action<KhachHang>(this.detach_KhachHangs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="NVarChar(30)")]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTK", DbType="Bit")]
		public System.Nullable<bool> LoaiTK
		{
			get
			{
				return this._LoaiTK;
			}
			set
			{
				if ((this._LoaiTK != value))
				{
					this.OnLoaiTKChanging(value);
					this.SendPropertyChanging();
					this._LoaiTK = value;
					this.SendPropertyChanged("LoaiTK");
					this.OnLoaiTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang", Storage="_KhachHangs", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang1", Storage="_KhachHangs1", ThisKey="MaTK", OtherKey="MaTK")]
		public EntitySet<KhachHang> KhachHangs1
		{
			get
			{
				return this._KhachHangs1;
			}
			set
			{
				this._KhachHangs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_KhachHangs1(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = this;
		}
		
		private void detach_KhachHangs1(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _Tensp;
		
		private System.Nullable<int> _Dongia;
		
		private string _Size;
		
		private string _Hinhanh;
		
		private System.Nullable<int> _Soluongton;
		
		private string _MaNCC;
		
		private System.Nullable<int> _MaLoaiSP;
		
		private EntitySet<CTPN> _CTPNs;
		
		private EntitySet<CTPN> _CTPNs1;
		
		private EntitySet<CTPN> _CTPNs2;
		
		private EntitySet<CTPN> _CTPNs3;
		
		private EntitySet<CTDDH> _CTDDHs;
		
		private EntitySet<CTDDH> _CTDDHs1;
		
		private EntityRef<LoaiSP> _LoaiSP;
		
		private EntityRef<LoaiSP> _LoaiSP1;
		
		private EntityRef<NCC> _NCC;
		
		private EntityRef<NCC> _NCC1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnTenspChanging(string value);
    partial void OnTenspChanged();
    partial void OnDongiaChanging(System.Nullable<int> value);
    partial void OnDongiaChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnHinhanhChanging(string value);
    partial void OnHinhanhChanged();
    partial void OnSoluongtonChanging(System.Nullable<int> value);
    partial void OnSoluongtonChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnMaLoaiSPChanging(System.Nullable<int> value);
    partial void OnMaLoaiSPChanged();
    #endregion
		
		public SanPham()
		{
			this._CTPNs = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs), new Action<CTPN>(this.detach_CTPNs));
			this._CTPNs1 = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs1), new Action<CTPN>(this.detach_CTPNs1));
			this._CTPNs2 = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs2), new Action<CTPN>(this.detach_CTPNs2));
			this._CTPNs3 = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs3), new Action<CTPN>(this.detach_CTPNs3));
			this._CTDDHs = new EntitySet<CTDDH>(new Action<CTDDH>(this.attach_CTDDHs), new Action<CTDDH>(this.detach_CTDDHs));
			this._CTDDHs1 = new EntitySet<CTDDH>(new Action<CTDDH>(this.attach_CTDDHs1), new Action<CTDDH>(this.detach_CTDDHs1));
			this._LoaiSP = default(EntityRef<LoaiSP>);
			this._LoaiSP1 = default(EntityRef<LoaiSP>);
			this._NCC = default(EntityRef<NCC>);
			this._NCC1 = default(EntityRef<NCC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tensp", DbType="NVarChar(25)")]
		public string Tensp
		{
			get
			{
				return this._Tensp;
			}
			set
			{
				if ((this._Tensp != value))
				{
					this.OnTenspChanging(value);
					this.SendPropertyChanging();
					this._Tensp = value;
					this.SendPropertyChanged("Tensp");
					this.OnTenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Int")]
		public System.Nullable<int> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(200)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinhanh", DbType="NVarChar(60)")]
		public string Hinhanh
		{
			get
			{
				return this._Hinhanh;
			}
			set
			{
				if ((this._Hinhanh != value))
				{
					this.OnHinhanhChanging(value);
					this.SendPropertyChanging();
					this._Hinhanh = value;
					this.SendPropertyChanged("Hinhanh");
					this.OnHinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soluongton", DbType="Int")]
		public System.Nullable<int> Soluongton
		{
			get
			{
				return this._Soluongton;
			}
			set
			{
				if ((this._Soluongton != value))
				{
					this.OnSoluongtonChanging(value);
					this.SendPropertyChanging();
					this._Soluongton = value;
					this.SendPropertyChanged("Soluongton");
					this.OnSoluongtonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Char(6)")]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if ((this._NCC.HasLoadedOrAssignedValue || this._NCC1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Int")]
		public System.Nullable<int> MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if ((this._LoaiSP.HasLoadedOrAssignedValue || this._LoaiSP1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN", Storage="_CTPNs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTPN> CTPNs
		{
			get
			{
				return this._CTPNs;
			}
			set
			{
				this._CTPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN1", Storage="_CTPNs1", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTPN> CTPNs1
		{
			get
			{
				return this._CTPNs1;
			}
			set
			{
				this._CTPNs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN2", Storage="_CTPNs2", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTPN> CTPNs2
		{
			get
			{
				return this._CTPNs2;
			}
			set
			{
				this._CTPNs2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTPN3", Storage="_CTPNs3", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTPN> CTPNs3
		{
			get
			{
				return this._CTPNs3;
			}
			set
			{
				this._CTPNs3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTDDH", Storage="_CTDDHs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTDDH> CTDDHs
		{
			get
			{
				return this._CTDDHs;
			}
			set
			{
				this._CTDDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTDDH1", Storage="_CTDDHs1", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTDDH> CTDDHs1
		{
			get
			{
				return this._CTDDHs1;
			}
			set
			{
				this._CTDDHs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_LoaiSP", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LoaiSP LoaiSP
		{
			get
			{
				return this._LoaiSP.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSP.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham1", Storage="_LoaiSP1", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LoaiSP LoaiSP1
		{
			get
			{
				return this._LoaiSP1.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP1.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP1.Entity = null;
						previousValue.SanPhams1.Remove(this);
					}
					this._LoaiSP1.Entity = value;
					if ((value != null))
					{
						value.SanPhams1.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSP1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_SanPham", Storage="_NCC", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NCC NCC
		{
			get
			{
				return this._NCC.Entity;
			}
			set
			{
				NCC previousValue = this._NCC.Entity;
				if (((previousValue != value) 
							|| (this._NCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCC.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._NCC.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NCC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_SanPham1", Storage="_NCC1", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NCC NCC1
		{
			get
			{
				return this._NCC1.Entity;
			}
			set
			{
				NCC previousValue = this._NCC1.Entity;
				if (((previousValue != value) 
							|| (this._NCC1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCC1.Entity = null;
						previousValue.SanPhams1.Remove(this);
					}
					this._NCC1.Entity = value;
					if ((value != null))
					{
						value.SanPhams1.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NCC1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CTPNs1(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = this;
		}
		
		private void detach_CTPNs1(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = null;
		}
		
		private void attach_CTPNs2(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham2 = this;
		}
		
		private void detach_CTPNs2(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham2 = null;
		}
		
		private void attach_CTPNs3(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham3 = this;
		}
		
		private void detach_CTPNs3(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SanPham3 = null;
		}
		
		private void attach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CTDDHs1(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = this;
		}
		
		private void detach_CTDDHs1(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.SanPham1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cusorder")]
	public partial class cusorder
	{
		
		private string _TenKH;
		
		private System.Nullable<int> _số_đơn_đã_đặt;
		
		public cusorder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this._TenKH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[số đơn đã đặt]", Storage="_số_đơn_đã_đặt", DbType="Int")]
		public System.Nullable<int> số_đơn_đã_đặt
		{
			get
			{
				return this._số_đơn_đã_đặt;
			}
			set
			{
				if ((this._số_đơn_đã_đặt != value))
				{
					this._số_đơn_đã_đặt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.thongkeddh")]
	public partial class thongkeddh
	{
		
		private System.Nullable<System.DateTime> _Ngaydat;
		
		private System.Nullable<int> _số_lần_đặt;
		
		public thongkeddh()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaydat", DbType="Date")]
		public System.Nullable<System.DateTime> Ngaydat
		{
			get
			{
				return this._Ngaydat;
			}
			set
			{
				if ((this._Ngaydat != value))
				{
					this._Ngaydat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[số lần đặt]", Storage="_số_lần_đặt", DbType="Int")]
		public System.Nullable<int> số_lần_đặt
		{
			get
			{
				return this._số_lần_đặt;
			}
			set
			{
				if ((this._số_lần_đặt != value))
				{
					this._số_lần_đặt = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
